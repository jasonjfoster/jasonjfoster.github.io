{
  "hash": "715d7b5ea4a94dec166ed014c58f53ea",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Nonlinear Nonparametric Statistics\"\nauthor: \"[Jason Foster](mailto:jason.j.foster@gmail.com)\"\ndate: last-modified\ncategories:\n  - analysis\n  - finance\n  - r\ndraft: true\neditor: \n  mode: source\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nfactors_r <- c(\"SP500\", \"DTWEXAFEGS\") # \"SP500\" does not contain dividends; note: \"DTWEXM\" discontinued as of Jan 2020\nfactors_d <- c(\"DGS10\", \"BAMLH0A0HYM2\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n# Implied shocks\n\n\n::: {.cell}\n\n```{.r .cell-code}\nshock <- -0.1\nreturns_z_xts <- returns_xts[ , \"SP500\"]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta <- solve(crossprod(returns_z_xts, returns_z_xts)) %*% crossprod(returns_z_xts, returns_xts)\nimplied_shocks <- shock %*% beta * risk_sign\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nround(data.frame(\n  implied_shocks = t(implied_shocks),\n  row.names = c(\"SP500\", \"USD\", \"US10Y\", \"USHY\")\n) * 100, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      implied_shocks\nSP500         -10.00\nUSD             0.43\nUS10Y          -0.08\nUSHY            0.55\n```\n\n\n:::\n:::\n\n\n# Partial moments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(NNS)\n```\n:::\n\n\n## Multivariate\n\n-   <https://cran.r-project.org/web/packages/NNS/vignettes/NNSvignette_Partial_Moments.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma <- cov(returns_xts)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npm <- PM.matrix(LPM_degree = 1, UPM_degree = 1, target = \"mean\",\n                variable = returns_xts, pop_adj = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(sigma, pm$cov.matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncl_pm <- pm$clpm\ncu_pm <- pm$cupm\ndl_pm <- pm$dlpm\ndu_pm <- pm$dupm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(sigma, (cl_pm + cu_pm) - (dl_pm + du_pm))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n## Stress P&L\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncomp <- 1\n```\n:::\n\n\n### Eigenanalysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nLV <- eigen(cov(returns_xts))\nL <- LV[[\"values\"]]\nV <- LV[[\"vectors\"]]\nscale <- shock / (sqrt(L[comp]) * V[ , comp])[1]\nimplied_shocks_pc <- scale * (sqrt(L[comp]) * V[ , comp]) * risk_sign\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nLV <- eigen(cov(cl_pm - (dl_pm + du_pm)))\nL <- LV[[\"values\"]]\nV <- LV[[\"vectors\"]]\nscale <- -0.1 / (sqrt(L[comp]) * V[ , comp])[1]\nimplied_shocks_pm <- scale * (sqrt(L[comp]) * V[ , comp]) * risk_sign\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nround(data.frame(\n  implied_shocks = t(implied_shocks),\n  implied_shocks_pc = implied_shocks_pc,\n  implied_shocks_pm = implied_shocks_pm,\n  row.names = c(\"SP500\", \"USD\", \"US10Y\", \"USHY\")\n) * 100, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      implied_shocks implied_shocks_pc implied_shocks_pm\nSP500         -10.00            -10.00            -10.00\nUSD             0.43              0.48              1.76\nUS10Y          -0.08             -0.08             -0.17\nUSHY            0.55              0.56              0.58\n```\n\n\n:::\n:::\n\n\n### Bootstrap\n\n- <https://github.com/OVVO-Financial/Finance/blob/main/stress_test.md>\n- <https://cran.r-project.org/web/packages/NNS/vignettes/NNSvignette_Sampling.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntarget <- 0\nn_samples <- 1e6\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nidx <- which(rowSums(returns_xts > target) != length(factors)) # exclude cupm quadrant\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_bs <- apply(returns_xts[idx, ], 2, function(x) {\n  result <- NNS.meboot(as.vector(x),\n                       reps = ceiling(n_samples / length(idx)),\n                       rho = 1,\n                       type = \"pearson\")[\"replicates\", ]$replicates\n  tail(as.vector(result), n_samples)\n})\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npm <- PM.matrix(LPM_degree = 1, UPM_degree = 1, target = \"mean\",\n                variable = returns_bs, pop_adj = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncl_pm <- pm$clpm\ncu_pm <- pm$cupm\ndl_pm <- pm$dlpm\ndu_pm <- pm$dupm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# LV <- eigen(cov(returns_bs))\nLV <- eigen(cov(cl_pm - (dl_pm + du_pm)))\nL <- LV[[\"values\"]]\nV <- LV[[\"vectors\"]]\nscale <- shock / (sqrt(L[comp]) * V[ , comp])[1]\nimplied_shocks_bs <- scale * (sqrt(L[comp]) * V[ , comp]) * risk_sign\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nround(data.frame(\n  implied_shocks = t(implied_shocks),\n  implied_shocks_pc = implied_shocks_pc,\n  implied_shocks_pm = implied_shocks_pm,\n  implied_shocks_bs = implied_shocks_bs,\n  row.names = c(\"SP500\", \"USD\", \"US10Y\", \"USHY\")\n) * 100, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      implied_shocks implied_shocks_pc implied_shocks_pm implied_shocks_bs\nSP500         -10.00            -10.00            -10.00            -10.00\nUSD             0.43              0.48              1.76              1.84\nUS10Y          -0.08             -0.08             -0.17             -0.18\nUSHY            0.55              0.56              0.58              0.57\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}