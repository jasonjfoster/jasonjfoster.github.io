{
  "hash": "f1aa153be535b95fecd83e9422dc9e79",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Nonlinear Nonparametric Statistics\"\nauthor: \"[Jason Foster](mailto:jason.j.foster@gmail.com)\"\ndate: last-modified\ncategories:\n  - analysis\n  - finance\n  - r\ndraft: true\neditor: \n  mode: source\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nfactors_r <- c(\"SP500\", \"DTWEXAFEGS\") # \"SP500\" does not contain dividends; note: \"DTWEXM\" discontinued as of Jan 2020\nfactors_d <- c(\"DGS10\", \"BAMLH0A0HYM2\")\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n# Partial moments\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(NNS)\n```\n:::\n\n\n## Multivariate\n\n-   <https://cran.r-project.org/web/packages/NNS/vignettes/NNSvignette_Partial_Moments.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma <- cov(returns_z)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npm <- PM.matrix(LPM_degree = 1, UPM_degree = 1, target = \"mean\",\n                variable = returns_z, pop_adj = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(sigma, pm$cov.matrix)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncl_pm <- pm$clpm\ncu_pm <- pm$cupm\ndl_pm <- pm$dlpm\ndu_pm <- pm$dupm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(sigma, (cl_pm + cu_pm) - (dl_pm + du_pm))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n### Stress P&L\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor <- \"SP500\"\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nc_cov <- cl_pm + cu_pm\nd_cov <- dl_pm + du_pm\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfactor_var <- sigma[factor, factor]\nx_factors <- factors[factors != factor]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbeta <- sigma[factor, x_factors] / factor_var\nc_beta <- c_cov[factor, x_factors] / factor_var\nd_beta <- d_cov[factor, x_factors] / factor_var\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(beta, c_beta - d_beta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npm_beta <- (c_cov - d_cov)[factor, x_factors] / (c_cov - d_cov)[factor, factor]\nall.equal(beta, pm_beta)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshock <- -0.1\nimplied_shocks <- beta * shock\nimplied_shocks_c <- c_beta * shock\nimplied_shocks_d <- d_beta * shock\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(implied_shocks, implied_shocks_c - implied_shocks_d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nall.equal(implied_shocks, pm_beta * shock)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks <- implied_shocks * risk_sign[x_factors]\nimplied_shocks_pm <- implied_shocks_c * risk_sign[x_factors]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nround(data.frame(\n  implied_shocks = implied_shocks,\n  implied_shocks_pm = implied_shocks_pm,\n  row.names = c(\"USD\", \"US10Y\", \"USHY\")\n) * 100, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      implied_shocks implied_shocks_pm\nUSD             0.45              1.22\nUS10Y          -0.08             -0.18\nUSHY            0.55              0.61\n```\n\n\n:::\n:::\n\n\n## Bootstrap\n\n- <https://github.com/OVVO-Financial/Finance/blob/main/stress_test.md>\n- <https://cran.r-project.org/web/packages/NNS/vignettes/NNSvignette_Sampling.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntarget <- 0\nn_samples <- 1e6\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# idx <- which(returns_z[ , factor] < target)\n# idx <- which(rowSums(returns_z < target) >= floor(length(factors) * 0.75))\nidx <- which(rowSums(returns_z < target) == length(factors))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_x <- apply(returns_z[idx, x_factors], 2, function(x) {\n  result <- NNS.meboot(as.vector(x),\n                       reps = ceiling(n_samples / length(idx)),\n                       rho = 1,\n                       type = \"pearson\")[\"replicates\", ]$replicates\n  tail(as.vector(result), n_samples)\n})\n```\n:::\n\n\n## Cross-validation\n\n- <https://cran.r-project.org/web/packages/NNS/vignettes/NNSvignette_Clustering_and_Regression.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_y <- NNS.stack(\n  IVs.train = returns_z[idx, x_factors],\n  DV.train = returns_z[idx, factor],\n  IVs.test = returns_x,\n  method = 1\n)$stack\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_y <- data.frame(returns_y)\ncolnames(returns_y) <- factor\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# revert factors to original direction\nreturns_x <- returns_x %*% diag(risk_sign[x_factors])\ncolnames(returns_x) <- x_factors\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsigma_clpm <- cov(cbind(returns_y, returns_x))\nbeta_clpm <- sigma_clpm[factor, x_factors] / as.vector(var(returns_y))\nimplied_shocks_clpm <- beta_clpm * shock\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nround(data.frame(\n  implied_shocks = implied_shocks,\n  implied_shocks_pm = implied_shocks_pm,\n  implied_shocks_clpm = implied_shocks_clpm,\n  row.names = c(\"USD\", \"US10Y\", \"USHY\")\n) * 100, 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      implied_shocks implied_shocks_pm implied_shocks_clpm\nUSD             0.45              1.22                0.78\nUS10Y          -0.08             -0.18               -0.24\nUSHY            0.55              0.61                1.22\n```\n\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}