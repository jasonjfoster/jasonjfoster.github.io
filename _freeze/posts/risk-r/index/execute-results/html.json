{
  "hash": "70fb26f3cb5e2a5ab1d6ce3d04bfdc67",
  "result": {
    "markdown": "---\ntitle: \"Risk\"\nauthor: \"[Jason Foster](mailto:jason.j.foster@gmail.com)\"\ndate: last-modified\ncategories:\n  - analysis\n  - finance\n  - r\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quantmod)\nlibrary(roll)\nlibrary(data.table)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfactors_r <- c(\"SP500\", \"DTWEXAFEGS\") # \"SP500\" does not contain dividends; note: \"DTWEXM\" discontinued as of Jan 2020\nfactors_d <- c(\"DGS10\", \"BAMLH0A0HYM2\")\nfactors <- c(factors_r, factors_d)\nwidth <- 252\nscale <- list(\"periods\" = 252, \"overlap\" = 5)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngetSymbols(factors, src = \"FRED\")\nlevels_xts <- do.call(merge, c(lapply(factors, function(i) get(i)), all = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_xts <- do.call(merge, lapply(factors, function(i) {\n    if (i %in% factors_r) {\n        diff(log((levels_xts[ , i])))\n    } else if (i %in% factors_d) {\n        -diff(levels_xts[ , i]) / 100\n    }    \n}))\noverlap_xts <- roll_mean(returns_xts, scale[[\"overlap\"]], min_obs = 1, na_restore = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# library(pls)\n# library(CVXR)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntickers <- \"BAICX\" # fund inception date is \"2011-11-28\" \ninvisible(getSymbols(tickers, src = \"tiingo\", api.key = Sys.getenv(\"TIINGO_API_KEY\"), adjust = TRUE))\nprices_xts <- do.call(merge, c(lapply(tickers, function(i) Cl(get(i))), all = TRUE))\ncolnames(prices_xts) <- tickers\nindex(prices_xts) <- as.Date(index(prices_xts))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_xts <- merge(returns_xts, diff(log(prices_xts)))\noverlap_xts <- merge(overlap_xts, roll_mean(returns_xts[ , tickers], scale[[\"overlap\"]], min_obs = 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# weights <- 0.9 ^ ((width - 1):0)\nweights <- rep(1, width)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap_xts <- na.omit(overlap_xts)\noverlap_x_xts <- tail(overlap_xts[ , factors], width)\noverlap_y_xts <- tail(overlap_xts[ , tickers], width)\n```\n:::\n\n\n# Ordinary least squares\n\n## Coefficients\n\n$$\n\\begin{aligned}\n\\hat{\\beta}=(X^\\mathrm{T}WX)^{-1}X^\\mathrm{T}Wy\n\\end{aligned}\n$$\n\n* <https://faculty.washington.edu/ezivot/research/factormodellecture_handout.pdf>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_coef <- function(x, y, weights, intercept) {\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    result <- solve(crossprod(x, diag(weights)) %*% x) %*% crossprod(x, diag(weights) %*% y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nintercept <- TRUE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(lm_coef(overlap_x_xts, overlap_y_xts, weights, intercept))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        (Intercept)    xSP500 xDTWEXAFEGS   xDGS10 xBAMLH0A0HYM2\nBAICX -5.278268e-06 0.2193373  -0.1563306 2.399199      1.540386\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (intercept) {\n    fit <- lm(overlap_y_xts ~ overlap_x_xts, weights = weights)\n} else {\n    fit <- lm(overlap_y_xts ~ overlap_x_xts - 1, weights = weights)\n}\n    \ncoef(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              (Intercept)        overlap_x_xtsSP500   overlap_x_xtsDTWEXAFEGS \n            -5.278268e-06              2.193373e-01             -1.563306e-01 \n       overlap_x_xtsDGS10 overlap_x_xtsBAMLH0A0HYM2 \n             2.399199e+00              1.540386e+00 \n```\n:::\n:::\n\n\n## R-squared\n\n$$\n\\begin{aligned}\nR^{2}=\\frac{\\hat{\\beta}^\\mathrm{T}(X^\\mathrm{T}WX)\\hat{\\beta}}{y^\\mathrm{T}Wy}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rsq <- function(x, y, weights, intercept) {\n        \n    coef <- lm_coef(x, y, weights, intercept)\n    \n    if (intercept) {\n        \n        x <- model.matrix(~ x)\n        x <- sweep(x, 2, apply(x, 2, weighted.mean, w = weights), \"-\")\n        y <- sweep(y, 2, apply(y, 2, weighted.mean, w = weights), \"-\")\n        \n    }\n  \n  result <- (t(coef) %*% (crossprod(x, diag(weights)) %*% x) %*% coef) / (t(y) %*% diag(weights) %*% y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rsq(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          BAICX\nBAICX 0.8552893\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8552893\n```\n:::\n:::\n\n\n## Standard errors\n\n$$\n\\begin{aligned}\n\\sigma_{\\hat{\\beta}}^{2}&=\\sigma_{\\varepsilon}^{2}(X^\\mathrm{T}WX)^{-1}\\\\\n&=\\frac{(1-R^{2})}{n-p}(X^\\mathrm{T}WX)^{-1}\\\\\n&=\\frac{SSE}{df_{E}}(X^\\mathrm{T}WX)^{-1}\\\\\n\\sigma_{\\hat{\\alpha}}^{2}&=\\sigma_{\\varepsilon}^{2}\\left(\\frac{1}{n}+\\mu^\\mathrm{T}(X^\\mathrm{T}WX)^{-1}\\mu\\right)\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# http://people.duke.edu/~rnau/mathreg.htm\nlm_se <- function(x, y, weights, intercept) {\n    \n    n_rows <- nrow(x)\n    n_cols <- ncol(x)\n    \n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) {\n        \n        x <- model.matrix(~ x)\n        y <- sweep(y, 2, apply(y, 2, weighted.mean, w = weights), \"-\")\n        \n        df_resid <- n_rows - n_cols - 1\n        \n    } else {\n        df_resid <- n_rows - n_cols\n    }\n    \n    var_y <- t(y) %*% diag(weights) %*% y\n    var_resid <- as.vector((1 - rsq) * var_y / df_resid)\n    \n    result <- sqrt(var_resid * diag(solve(crossprod(x, diag(weights)) %*% x)))\n    \n    return(result)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_se(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)        xSP500   xDTWEXAFEGS        xDGS10 xBAMLH0A0HYM2 \n 0.0000513363  0.0183695111  0.0343933397  0.1795793875  0.1533043034 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(summary(fit))[ , \"Std. Error\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              (Intercept)        overlap_x_xtsSP500   overlap_x_xtsDTWEXAFEGS \n             0.0000513363              0.0183695111              0.0343933397 \n       overlap_x_xtsDGS10 overlap_x_xtsBAMLH0A0HYM2 \n             0.1795793875              0.1533043034 \n```\n:::\n:::\n\n\n# Standalone risk\n\n$$\n\\begin{aligned}\n\\text{SAR}_{k}&=\\sqrt{w_{k}^{2}\\sigma_{k}^{2}}\\\\\n\\text{SAR}_{\\varepsilon}&=\\sqrt{(1-R^{2})\\sigma_{y}^{2}}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_sar <- function(x, y, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    sigma <- cov.wt(cbind(x, y), wt = weights, center = intercept)$cov\n    sar <- coef ^ 2 * diag(sigma[-ncol(sigma), -ncol(sigma)])\n    sar_eps <- (1 - rsq) * sigma[ncol(sigma), ncol(sigma)]\n    \n    result <- sqrt(c(sigma[ncol(sigma), ncol(sigma)],\n                     sar,\n                     sar_eps))\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_sar(overlap_x_xts, overlap_y_xts, weights, intercept) * sqrt(scale[[\"periods\"]]) * sqrt(scale[[\"overlap\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.07439664 0.00000000 0.03192413 0.01030466 0.02973748 0.02476741 0.02830112\n```\n:::\n:::\n\n\n# Risk contribution\n\n$$\n\\begin{aligned}\n\\text{MCR}&=w^\\mathrm{T}\\frac{\\partial\\sigma_{y}}{\\partial w}\\\\\n&=w^\\mathrm{T}\\frac{\\Sigma w}{\\sigma_{y}}\\\\\n\\text{MCR}_{\\varepsilon}&=\\sigma_{y}-\\sum_{k=1}^{n}\\text{MCR}_{k}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# http://faculty.washington.edu/ezivot/research/factormodelrisklecture_handout.pdf\nlm_mcr <- function(x, y, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    sigma <- cov.wt(cbind(x, y), wt = weights, center = intercept)$cov\n    mcr <- coef * sigma[-ncol(sigma), -ncol(sigma)] %*% coef / sqrt(sigma[ncol(sigma), ncol(sigma)])\n    mcr_eps <- sqrt(sigma[ncol(sigma), ncol(sigma)]) - sum(mcr)\n    \n    result <- c(sqrt(sigma[ncol(sigma), ncol(sigma)]),\n                mcr,\n                mcr_eps)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_mcr(overlap_x_xts, overlap_y_xts, weights, intercept) * sqrt(scale[[\"periods\"]]) * sqrt(scale[[\"overlap\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.074396638 0.000000000 0.025920796 0.005912164 0.017099671 0.014698019\n[7] 0.010765988\n```\n:::\n:::\n\n\n# Implied shocks\n\n$$\n\\begin{aligned}\n\\hat{\\beta}&=(Z^\\mathrm{T}WZ)^{-1}Z^\\mathrm{T}WX\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks <- function(shocks, x, z, weights) {\n    \n    beta <- solve(crossprod(z, diag(weights) %*% z)) %*% crossprod(z, diag(weights) %*% x)\n    \n    result <- shocks %*% beta\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshocks <- c(-0.1, 0.1)\noverlap_z_xts <- overlap_x_xts[ , 1:2]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks(shocks, overlap_x_xts, overlap_z_xts, weights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     SP500 DTWEXAFEGS      DGS10 BAMLH0A0HYM2\n[1,]  -0.1        0.1 -0.0100732 -0.003375904\n```\n:::\n:::\n\n\n# Stress P&L\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnl_stress <- function(shocks, x, y, z, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    result <- t(coef) * implied_shocks(shocks, x, z, weights)\n    \n    return(result)    \n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npnl_stress(shocks, overlap_x_xts, overlap_y_xts, overlap_z_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       (Intercept)      xSP500 xDTWEXAFEGS     xDGS10 xBAMLH0A0HYM2\nBAICX 4.011023e-05 -0.02193373 -0.01563306 -0.0241676  -0.005200194\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}