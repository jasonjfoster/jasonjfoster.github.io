{
  "hash": "e18be501ad67d498ff66f644aac13be5",
  "result": {
    "markdown": "---\ntitle: \"Risk\"\nauthor: \"[Jason Foster](mailto:jason.j.foster@gmail.com)\"\ndate: last-modified\ncategories:\n  - analysis\n  - finance\n  - r\n---\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(quantmod)\nlibrary(roll)\nlibrary(data.table)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfactors_r <- c(\"SP500\", \"DTWEXAFEGS\") # \"SP500\" does not contain dividends; note: \"DTWEXM\" discontinued as of Jan 2020\nfactors_d <- c(\"DGS10\", \"BAMLH0A0HYM2\")\nfactors <- c(factors_r, factors_d)\nwidth <- 252\nscale <- list(\"periods\" = 252, \"overlap\" = 5)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngetSymbols(factors, src = \"FRED\")\nlevels_xts <- do.call(merge, c(lapply(factors, function(i) get(i)), all = TRUE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_xts <- do.call(merge, lapply(factors, function(i) {\n    if (i %in% factors_r) {\n        diff(log((levels_xts[ , i])))\n    } else if (i %in% factors_d) {\n        -diff(levels_xts[ , i]) / 100\n    }    \n}))\noverlap_xts <- roll_mean(returns_xts, scale[[\"overlap\"]], min_obs = 1, na_restore = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntickers <- \"BAICX\" # fund inception date is \"2011-11-28\" \ninvisible(getSymbols(tickers, src = \"tiingo\", api.key = Sys.getenv(\"TIINGO_API_KEY\"), adjust = TRUE))\nprices_xts <- do.call(merge, c(lapply(tickers, function(i) Cl(get(i))), all = TRUE))\ncolnames(prices_xts) <- tickers\nindex(prices_xts) <- as.Date(index(prices_xts))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nreturns_xts <- merge(returns_xts, diff(log(prices_xts)))\noverlap_xts <- merge(overlap_xts, roll_mean(returns_xts[ , tickers], scale[[\"overlap\"]], min_obs = 1))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# weights <- 0.9 ^ ((width - 1):0)\nweights <- rep(1, width)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noverlap_xts <- na.omit(overlap_xts)\noverlap_x_xts <- tail(overlap_xts[ , factors], width)\noverlap_y_xts <- tail(overlap_xts[ , tickers], width)\n```\n:::\n\n\n# Ordinary least squares\n\n\n::: {.cell}\n\n```{.r .cell-code}\nintercept <- TRUE\n```\n:::\n\n\n## Coefficients\n\n$$\n\\begin{aligned}\n\\hat{\\beta}=(X^\\mathrm{T}WX)^{-1}X^\\mathrm{T}Wy\n\\end{aligned}\n$$\n\n* <https://faculty.washington.edu/ezivot/research/factormodellecture_handout.pdf>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_coef <- function(x, y, weights, intercept) {\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    result <- solve(crossprod(x, diag(weights)) %*% x) %*% crossprod(x, diag(weights) %*% y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(lm_coef(overlap_x_xts, overlap_y_xts, weights, intercept))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        (Intercept)    xSP500 xDTWEXAFEGS   xDGS10 xBAMLH0A0HYM2\nBAICX -1.576148e-05 0.2233802  -0.1413442 2.505277      1.575168\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (intercept) {\n    fit <- lm(overlap_y_xts ~ overlap_x_xts, weights = weights)\n} else {\n    fit <- lm(overlap_y_xts ~ overlap_x_xts - 1, weights = weights)\n}\n    \ncoef(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              (Intercept)        overlap_x_xtsSP500   overlap_x_xtsDTWEXAFEGS \n            -1.576148e-05              2.233802e-01             -1.413442e-01 \n       overlap_x_xtsDGS10 overlap_x_xtsBAMLH0A0HYM2 \n             2.505277e+00              1.575168e+00 \n```\n:::\n:::\n\n\n## R-squared\n\n$$\n\\begin{aligned}\nR^{2}=\\frac{\\hat{\\beta}^\\mathrm{T}(X^\\mathrm{T}WX)\\hat{\\beta}}{y^\\mathrm{T}Wy}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rsq <- function(x, y, weights, intercept) {\n        \n    coef <- lm_coef(x, y, weights, intercept)\n    \n    if (intercept) {\n        \n        x <- model.matrix(~ x)\n        x <- sweep(x, 2, apply(x, 2, weighted.mean, w = weights), \"-\")\n        y <- sweep(y, 2, apply(y, 2, weighted.mean, w = weights), \"-\")\n        \n    }\n    \n    result <- (t(coef) %*% (crossprod(x, diag(weights)) %*% x) %*% coef) / (crossprod(y, diag(weights)) %*% y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rsq(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          BAICX\nBAICX 0.8595365\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8595365\n```\n:::\n:::\n\n\n## Standard errors\n\n$$\n\\begin{aligned}\n\\sigma_{\\hat{\\beta}}^{2}&=\\sigma_{\\varepsilon}^{2}(X^\\mathrm{T}WX)^{-1}\\\\\n&=\\frac{(1-R^{2})}{n-p}(X^\\mathrm{T}WX)^{-1}\\\\\n&=\\frac{SSE}{df_{E}}(X^\\mathrm{T}WX)^{-1}\\\\\n\\sigma_{\\hat{\\alpha}}^{2}&=\\sigma_{\\varepsilon}^{2}\\left(\\frac{1}{n}+\\mu^\\mathrm{T}(X^\\mathrm{T}WX)^{-1}\\mu\\right)\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# http://people.duke.edu/~rnau/mathreg.htm\nlm_se <- function(x, y, weights, intercept) {\n    \n    n_rows <- nrow(x)\n    n_cols <- ncol(x)\n    \n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) {\n        \n        x <- model.matrix(~ x)\n        y <- sweep(y, 2, apply(y, 2, weighted.mean, w = weights), \"-\")\n        \n        df_resid <- n_rows - n_cols - 1\n        \n    } else {\n        df_resid <- n_rows - n_cols\n    }\n    \n    var_y <- crossprod(y, diag(weights)) %*% y\n    var_resid <- as.vector((1 - rsq) * var_y / df_resid)\n    \n    result <- sqrt(var_resid * diag(solve(crossprod(x, diag(weights)) %*% x)))\n    \n    return(result)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_se(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)        xSP500   xDTWEXAFEGS        xDGS10 xBAMLH0A0HYM2 \n 5.062133e-05  1.827216e-02  3.459779e-02  1.762213e-01  1.521949e-01 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(summary(fit))[ , \"Std. Error\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              (Intercept)        overlap_x_xtsSP500   overlap_x_xtsDTWEXAFEGS \n             5.062133e-05              1.827216e-02              3.459779e-02 \n       overlap_x_xtsDGS10 overlap_x_xtsBAMLH0A0HYM2 \n             1.762213e-01              1.521949e-01 \n```\n:::\n:::\n\n\n# Principal component regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pls)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncomps <- 1\n```\n:::\n\n\n## Coefficients\n\n$$\n\\begin{aligned}\nW_{k}&=\\mathbf{X}V_{k}=[\\mathbf{X}\\mathbf{v}_{1},\\ldots,\\mathbf{X}\\mathbf{v}_{k}]\\\\\n{\\widehat{\\gamma}}_{k}&=\\left(W_{k}^\\mathrm{T}W_{k}\\right)^{-1}W_{k}^\\mathrm{T}\\mathbf{Y}\\\\\n{\\widehat{\\boldsymbol{\\beta}}}_{k}&=V_{k}{\\widehat{\\gamma}}_{k}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# https://en.wikipedia.org/wiki/Principal_component_regression\npcr_coef <- function(x, y, comps) {\n    \n    x <- sweep(x, 2, colMeans(x), \"-\")\n    LV <- eigen(cov(x))\n    V <- LV$vectors\n    \n    W <- x %*% V\n    gamma <- solve(crossprod(W)) %*% (crossprod(W, y))\n    \n    result <- V[ , 1:comps] %*% as.matrix(gamma[1:comps])\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nscale_x_xts <- scale(overlap_x_xts)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(pcr_coef(scale_x_xts, overlap_y_xts, comps))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             [,1]          [,2]         [,3]         [,4]\n[1,] 0.0008136817 -0.0007190404 0.0005630743 0.0005627385\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(pcr_coef(overlap_x_xts, overlap_y_xts, comps))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          [,1]        [,2]       [,3]       [,4]\n[1,] 0.4083556 -0.09353679 0.01108851 0.02805689\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- pcr(reformulate(termlabels = \".\", response = tickers), \n           data = merge(scale_x_xts, overlap_y_xts), ncomp = comps)\ncoef(fit)[ , , 1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        SP500    DTWEXAFEGS         DGS10  BAMLH0A0HYM2 \n 0.0008136817 -0.0007190404  0.0005630743  0.0005627385 \n```\n:::\n:::\n\n\n## R-squared\n\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_rsq <- function(x, y, comps) {\n    \n    coef <- pcr_coef(x, y, comps)\n    \n    x <- sweep(x, 2, colMeans(x), \"-\")\n    y <- sweep(y, 2, colMeans(y), \"-\")\n    \n    result <- (t(coef) %*% crossprod(x) %*% coef) / crossprod(y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_rsq(scale_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          BAICX\nBAICX 0.8236699\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_rsq(overlap_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n          BAICX\nBAICX 0.6892296\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nR2(fit)$val[comps + 1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8236699\n```\n:::\n:::\n\n\n## Standard errors\n\n$$\n\\begin{aligned}\n\\text{Var}({\\widehat{\\boldsymbol{\\beta}}}_{k})&=\\sigma^{2}V_{k}(W_{k}^\\mathrm{T}W_{k})^{-1}V_{k}^\\mathrm{T}\\\\\n&=\\sigma^{2}V_{k}\\text{diag}\\left(\\lambda_{1}^{-1},\\ldots,\\lambda_{k}^{-1}\\right)V_{k}^\\mathrm{T}\\\\\n&=\\sigma^{2}\\sum_{j=1}^{k}{\\frac{\\mathbf{v}_{j}\\mathbf{v}_{j}^\\mathrm{T}}{\\lambda_{j}}}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# unable to verify the result\npcr_se <- function(x, y, comps) {\n    \n    n_rows <- nrow(x)\n    n_cols <- ncol(x)\n    \n    rsq <- pcr_rsq(x, y, comps)\n    \n    y <- sweep(y, 2, colMeans(y), \"-\")\n    \n    df_resid <- n_rows - n_cols - 1\n    \n    var_y <- crossprod(y)\n    var_resid <- as.vector((1 - rsq) * var_y / df_resid)\n    \n    LV <- eigen(cov(x))\n    L <- LV$values[1:comps] * (n_rows - 1)\n    V <- LV$vectors[ , 1:comps]\n    \n    result <- sqrt(var_resid * diag(V %*% sweep(t(V), 1, 1 / L, \"*\")))\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_se(scale_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2.395481e-05 2.116857e-05 1.657692e-05 1.656703e-05\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_se(overlap_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.0174472874 0.0039964272 0.0004737647 0.0011987511\n```\n:::\n:::\n\n\n# Partial least squares\n\n# Standalone risk\n\n$$\n\\begin{aligned}\n\\text{SAR}_{k}&=\\sqrt{w_{k}^{2}\\sigma_{k}^{2}}\\\\\n\\text{SAR}_{\\varepsilon}&=\\sqrt{(1-R^{2})\\sigma_{y}^{2}}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_sar <- function(x, y, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    sigma <- cov.wt(cbind(x, y), wt = weights, center = intercept)$cov\n    sar <- coef ^ 2 * diag(sigma[-ncol(sigma), -ncol(sigma)])\n    sar_eps <- (1 - rsq) * sigma[ncol(sigma), ncol(sigma)]\n    \n    result <- sqrt(c(sigma[ncol(sigma), ncol(sigma)],\n                     sar,\n                     sar_eps))\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_sar(overlap_x_xts, overlap_y_xts, weights, intercept) * sqrt(scale[[\"periods\"]]) * sqrt(scale[[\"overlap\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.074529211 0.000000000 0.032119720 0.009161036 0.031077911 0.025104597\n[7] 0.027932405\n```\n:::\n:::\n\n\n# Risk contribution\n\n$$\n\\begin{aligned}\n\\text{MCR}&=w^\\mathrm{T}\\frac{\\partial\\sigma_{y}}{\\partial w}\\\\\n&=w^\\mathrm{T}\\frac{\\Sigma w}{\\sigma_{y}}\\\\\n\\text{MCR}_{\\varepsilon}&=\\sigma_{y}-\\sum_{k=1}^{n}\\text{MCR}_{k}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# http://faculty.washington.edu/ezivot/research/factormodelrisklecture_handout.pdf\nlm_mcr <- function(x, y, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    sigma <- cov.wt(cbind(x, y), wt = weights, center = intercept)$cov\n    mcr <- coef * sigma[-ncol(sigma), -ncol(sigma)] %*% coef / sqrt(sigma[ncol(sigma), ncol(sigma)])\n    mcr_eps <- sqrt(sigma[ncol(sigma), ncol(sigma)]) - sum(mcr)\n    \n    result <- c(sqrt(sigma[ncol(sigma), ncol(sigma)]),\n                mcr,\n                mcr_eps)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_mcr(overlap_x_xts, overlap_y_xts, weights, intercept) * sqrt(scale[[\"periods\"]]) * sqrt(scale[[\"overlap\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.074529211 0.000000000 0.026009808 0.005251373 0.017894334 0.014905060\n[7] 0.010468637\n```\n:::\n:::\n\n\n# Implied shocks\n\n$$\n\\begin{aligned}\n\\hat{\\beta}&=(Z^\\mathrm{T}WZ)^{-1}Z^\\mathrm{T}WX\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks <- function(shocks, x, z, weights) {\n    \n    beta <- solve(crossprod(z, diag(weights) %*% z)) %*% crossprod(z, diag(weights) %*% x)\n    \n    result <- shocks %*% beta\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshocks <- c(-0.1, 0.1)\noverlap_z_xts <- overlap_x_xts[ , 1:2]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks(shocks, overlap_x_xts, overlap_z_xts, weights)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     SP500 DTWEXAFEGS      DGS10 BAMLH0A0HYM2\n[1,]  -0.1        0.1 -0.0102389 -0.003531926\n```\n:::\n:::\n\n\n# Stress P&L\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnl_stress <- function(shocks, x, y, z, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    result <- t(coef) * implied_shocks(shocks, x, z, weights)\n    \n    return(result)    \n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npnl_stress(shocks, overlap_x_xts, overlap_y_xts, overlap_z_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       (Intercept)      xSP500 xDTWEXAFEGS      xDGS10 xBAMLH0A0HYM2\nBAICX 0.0001073413 -0.02233802 -0.01413442 -0.02565128  -0.005563378\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}