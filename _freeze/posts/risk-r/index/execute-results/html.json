{
  "hash": "0acbc8667d8083a664b8bcec2bd0810d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Risk\"\nauthor: \"[Jason Foster](mailto:jason.j.foster@gmail.com)\"\ndate: last-modified\ncategories:\n  - analysis\n  - finance\n  - r\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nfactors_r <- c(\"SP500\", \"DTWEXAFEGS\") # \"SP500\" does not contain dividends; note: \"DTWEXM\" discontinued as of Jan 2020\nfactors_d <- c(\"DGS10\", \"BAMLH0A0HYM2\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntickers <- \"BAICX\" # fund inception date is \"2011-11-28\" \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nintercept <- TRUE\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n# Regression analysis\n\n## Ordinary least squares\n\n### Coefficients\n\n$$\n\\begin{aligned}\n\\hat{\\beta}=(X^\\mathrm{T}WX)^{-1}X^\\mathrm{T}Wy\n\\end{aligned}\n$$\n\n-   <https://faculty.washington.edu/ezivot/research/factormodellecture_handout.pdf>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_coef <- function(x, y, weights, intercept) {\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    result <- solve(crossprod(x, diag(weights)) %*% x) %*% crossprod(x, diag(weights) %*% y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(lm_coef(overlap_x_xts, overlap_y_xts, weights, intercept))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      (Intercept)    xSP500 xDTWEXAFEGS   xDGS10 xBAMLH0A0HYM2\nBAICX 7.30012e-05 0.1913491   -0.145976 3.230495      1.220434\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nif (intercept) {\n    fit <- lm(overlap_y_xts ~ overlap_x_xts, weights = weights)\n} else {\n    fit <- lm(overlap_y_xts ~ overlap_x_xts - 1, weights = weights)\n}\n    \ncoef(fit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              (Intercept)        overlap_x_xtsSP500   overlap_x_xtsDTWEXAFEGS \n             0.0000730012              0.1913490751             -0.1459759507 \n       overlap_x_xtsDGS10 overlap_x_xtsBAMLH0A0HYM2 \n             3.2304951748              1.2204339943 \n```\n\n\n:::\n:::\n\n\n### R-squared\n\n$$\n\\begin{aligned}\nR^{2}=\\frac{\\hat{\\beta}^\\mathrm{T}(X^\\mathrm{T}WX)\\hat{\\beta}}{y^\\mathrm{T}Wy}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rsq <- function(x, y, weights, intercept) {\n        \n    coef <- lm_coef(x, y, weights, intercept)\n    \n    if (intercept) {\n        \n        x <- model.matrix(~ x)\n        x <- sweep(x, 2, apply(x, 2, weighted.mean, w = weights), \"-\")\n        y <- sweep(y, 2, apply(y, 2, weighted.mean, w = weights), \"-\")\n        \n    }\n    \n    result <- (t(coef) %*% (crossprod(x, diag(weights)) %*% x) %*% coef) / (crossprod(y, diag(weights)) %*% y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_rsq(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          BAICX\nBAICX 0.7576384\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(fit)$r.squared\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.7576384\n```\n\n\n:::\n:::\n\n\n### Standard errors\n\n$$\n\\begin{aligned}\n\\sigma_{\\hat{\\beta}}^{2}&=\\sigma_{\\varepsilon}^{2}(X^\\mathrm{T}WX)^{-1}\\\\\n&=\\frac{(1-R^{2})}{n-p}(X^\\mathrm{T}WX)^{-1}\\\\\n&=\\frac{SSE}{df_{E}}(X^\\mathrm{T}WX)^{-1}\\\\\n\\sigma_{\\hat{\\alpha}}^{2}&=\\sigma_{\\varepsilon}^{2}\\left(\\frac{1}{n}+\\mu^\\mathrm{T}(X^\\mathrm{T}WX)^{-1}\\mu\\right)\n\\end{aligned}\n$$\n\n-   <http://people.duke.edu/~rnau/mathreg.htm>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_se <- function(x, y, weights, intercept) {\n    \n    n_rows <- nrow(x)\n    n_cols <- ncol(x)\n    \n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) {\n        \n        x <- model.matrix(~ x)\n        y <- sweep(y, 2, apply(y, 2, weighted.mean, w = weights), \"-\")\n        \n        df_resid <- n_rows - n_cols - 1\n        \n    } else {\n        df_resid <- n_rows - n_cols\n    }\n    \n    var_y <- crossprod(y, diag(weights)) %*% y\n    var_resid <- as.numeric((1 - rsq) * var_y / df_resid)\n    \n    result <- sqrt(var_resid * diag(solve(crossprod(x, diag(weights)) %*% x)))\n    \n    return(result)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_se(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  (Intercept)        xSP500   xDTWEXAFEGS        xDGS10 xBAMLH0A0HYM2 \n 5.121335e-05  1.940601e-02  4.495683e-02  2.662767e-01  2.582900e-01 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef(summary(fit))[ , \"Std. Error\"]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n              (Intercept)        overlap_x_xtsSP500   overlap_x_xtsDTWEXAFEGS \n             5.121335e-05              1.940601e-02              4.495683e-02 \n       overlap_x_xtsDGS10 overlap_x_xtsBAMLH0A0HYM2 \n             2.662767e-01              2.582900e-01 \n```\n\n\n:::\n:::\n\n\n### Shapley values\n\n$$\nR^{2}_{i}=\\sum_{S\\subseteq N\\setminus\\{i\\}}{\\frac{|S|!\\;(n-|S|-1)!}{n!}}(R^{2}(S\\cup\\{i\\})-R^{2}(S))\n$$\n\n-   <https://real-statistics.com/multiple-regression/shapley-owen-decomposition/>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_shap <- function(x, y, weights, intercept) {\n  \n  n_rows <- nrow(x)\n  n_cols <- ncol(x)\n  n_combn <- 2 ^ n_cols\n  n_vec <- array(0, n_combn)\n  ix_mat <- matrix(0, nrow = n_cols, ncol = n_combn)\n  rsq <- array(0, n_combn)\n  result <- array(0, n_cols)\n  \n  # number of binary combinations\n  for (k in 1:n_combn) {\n    \n    n <- 0\n    n_size <- k - 1\n    \n    # find the binary combination\n    for (j in 1:n_cols) {\n      \n      if (n_size %% 2 == 0) {\n        \n        n <- n + 1\n        \n        ix_mat[j, k] = j - 1 + 1\n        \n      }\n      \n      n_size <- n_size %/% 2\n      \n    }\n    \n    n_vec[k] <- n\n    \n    if (n > 0) {\n      \n      ix_subset<- which(ix_mat[ , k] != 0)\n      x_subset <- x[ , ix_subset]\n      \n      rsq[k] <- lm_rsq(x_subset, y, weights, intercept)\n\n    }\n    \n  }\n\n  # calculate the exact Shapley value for r-squared\n  for (j in 1:n_cols) {\n\n    ix_pos <- which(ix_mat[j, ] != 0)\n    ix_neg <- which(ix_mat[j, ] == 0)\n    ix_n <- n_vec[ix_neg]\n    rsq_diff <- rsq[ix_pos] - rsq[ix_neg]\n\n    for (k in 1:(n_combn / 2)) {\n\n      s <- ix_n[k]\n      weight <- factorial(s) * factorial(n_cols - s - 1) / factorial(n_cols)\n      result[j] <- result[j] + weight * rsq_diff[k]\n\n    }\n    \n  }\n\n  return(result)\n  \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_shap(overlap_x_xts, overlap_y_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.26603748 0.13080190 0.26329100 0.09750806\n```\n\n\n:::\n:::\n\n\n## Principal component regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pls)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncomps <- 1\n```\n:::\n\n\n### Coefficients\n\n$$\n\\begin{aligned}\nW_{k}&=\\mathbf{X}V_{k}=[\\mathbf{X}\\mathbf{v}_{1},\\ldots,\\mathbf{X}\\mathbf{v}_{k}]\\\\\n{\\widehat{\\gamma}}_{k}&=\\left(W_{k}^\\mathrm{T}W_{k}\\right)^{-1}W_{k}^\\mathrm{T}\\mathbf{Y}\\\\\n{\\widehat{\\boldsymbol{\\beta}}}_{k}&=V_{k}{\\widehat{\\gamma}}_{k}\n\\end{aligned}\n$$\n\n-   <https://en.wikipedia.org/wiki/Principal_component_regression>\n\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_coef <- function(x, y, comps) {\n    \n    x <- sweep(x, 2, colMeans(x), \"-\")\n    LV <- eigen(cov(x))\n    V <- LV[[\"vectors\"]]\n    \n    W <- x %*% V\n    gamma <- solve(crossprod(W)) %*% (crossprod(W, y))\n    \n    result <- V[ , 1:comps] %*% as.matrix(gamma[1:comps])\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nscale_x_xts <- scale(overlap_x_xts)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(pcr_coef(scale_x_xts, overlap_y_xts, comps))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             [,1]          [,2]         [,3]         [,4]\n[1,] 0.0006077055 -0.0004782704 0.0003097628 0.0004990806\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nt(pcr_coef(overlap_x_xts, overlap_y_xts, comps))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          [,1]        [,2]        [,3]       [,4]\n[1,] 0.2976711 -0.02689162 0.003195201 0.01504472\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfit <- pcr(reformulate(termlabels = \".\", response = tickers), \n           data = merge(scale_x_xts, overlap_y_xts), ncomp = comps)\ncoef(fit)[ , , 1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        SP500    DTWEXAFEGS         DGS10  BAMLH0A0HYM2 \n 0.0006077055 -0.0004782704  0.0003097628  0.0004990806 \n```\n\n\n:::\n:::\n\n\n### R-squared\n\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_rsq <- function(x, y, comps) {\n    \n    coef <- pcr_coef(x, y, comps)\n    \n    x <- sweep(x, 2, colMeans(x), \"-\")\n    y <- sweep(y, 2, colMeans(y), \"-\")\n    \n    result <- (t(coef) %*% crossprod(x) %*% coef) / crossprod(y)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_rsq(scale_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          BAICX\nBAICX 0.6555066\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_rsq(overlap_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n         BAICX\nBAICX 0.456853\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nR2(fit)$val[comps + 1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.6555066\n```\n\n\n:::\n:::\n\n\n### Standard errors\n\n$$\n\\begin{aligned}\n\\text{Var}({\\widehat{\\boldsymbol{\\beta}}}_{k})&=\\sigma^{2}V_{k}(W_{k}^\\mathrm{T}W_{k})^{-1}V_{k}^\\mathrm{T}\\\\\n&=\\sigma^{2}V_{k}\\text{diag}\\left(\\lambda_{1}^{-1},\\ldots,\\lambda_{k}^{-1}\\right)V_{k}^\\mathrm{T}\\\\\n&=\\sigma^{2}\\sum_{j=1}^{k}{\\frac{\\mathbf{v}_{j}\\mathbf{v}_{j}^\\mathrm{T}}{\\lambda_{j}}}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# unable to verify the result\npcr_se <- function(x, y, comps) {\n    \n    n_rows <- nrow(x)\n    n_cols <- ncol(x)\n    \n    rsq <- pcr_rsq(x, y, comps)\n    \n    y <- sweep(y, 2, colMeans(y), \"-\")\n    \n    df_resid <- n_rows - n_cols - 1\n    \n    var_y <- crossprod(y)\n    var_resid <- as.numeric((1 - rsq) * var_y / df_resid)\n    \n    LV <- eigen(cov(x))\n    L <- LV$values[1:comps] * (n_rows - 1)\n    V <- LV$vectors[ , 1:comps]\n    \n    result <- sqrt(var_resid * diag(V %*% sweep(t(V), 1, 1 / L, \"*\")))\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_se(scale_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.803152e-05 2.206109e-05 1.428837e-05 2.302100e-05\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npcr_se(overlap_x_xts, overlap_y_xts, comps)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.0206518316 0.0018656873 0.0002216767 0.0010437727\n```\n\n\n:::\n:::\n\n\n## Partial least squares\n\n# Risk decomposition\n\n## Standalone risk\n\n$$\n\\begin{aligned}\n\\text{SAR}_{k}&=\\sqrt{w_{k}^{2}\\sigma_{k}^{2}}\\\\\n\\text{SAR}_{\\varepsilon}&=\\sqrt{(1-R^{2})\\sigma_{y}^{2}}\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_sar <- function(x, y, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    sigma <- cov.wt(cbind(x, y), wt = weights, center = intercept)$cov\n    sar <- coef ^ 2 * diag(sigma[-ncol(sigma), -ncol(sigma)])\n    sar_eps <- (1 - rsq) * sigma[ncol(sigma), ncol(sigma)]\n    \n    result <- sqrt(c(sigma[ncol(sigma), ncol(sigma)],\n                     sar,\n                     sar_eps))\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_sar(overlap_x_xts, overlap_y_xts, weights, intercept) * sqrt(scale[[\"periods\"]] * scale[[\"overlap\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.056078921 0.000000000 0.024119624 0.007299644 0.029654129 0.012305724\n[7] 0.027607781\n```\n\n\n:::\n:::\n\n\n## Risk contribution\n\n$$\n\\begin{aligned}\n\\text{MCR}&=w^\\mathrm{T}\\frac{\\partial\\sigma_{y}}{\\partial w}\\\\\n&=w^\\mathrm{T}\\frac{\\Sigma w}{\\sigma_{y}}\\\\\n\\text{MCR}_{\\varepsilon}&=\\sigma_{y}-\\sum_{k=1}^{n}\\text{MCR}_{k}\n\\end{aligned}\n$$\n\n-   <https://bookdown.org/compfinezbook/introcompfinr/Portfolio-risk-reports.html>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_mcr <- function(x, y, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    rsq <- lm_rsq(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    sigma <- cov.wt(cbind(x, y), wt = weights, center = intercept)$cov\n    mcr <- coef * sigma[-ncol(sigma), -ncol(sigma)] %*% coef / sqrt(sigma[ncol(sigma), ncol(sigma)])\n    mcr_eps <- sqrt(sigma[ncol(sigma), ncol(sigma)]) - sum(mcr)\n    \n    result <- c(sqrt(sigma[ncol(sigma), ncol(sigma)]),\n                mcr,\n                mcr_eps)\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_mcr(overlap_x_xts, overlap_y_xts, weights, intercept) * sqrt(scale[[\"periods\"]] * scale[[\"overlap\"]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.056078921 0.000000000 0.015956899 0.003914750 0.017939151 0.004676747\n[7] 0.013591374\n```\n\n\n:::\n:::\n\n\n# Scenario analysis\n\n## Implied shocks\n\n$$\n\\begin{aligned}\n\\hat{\\beta}&=(Z^\\mathrm{T}WZ)^{-1}Z^\\mathrm{T}WX\n\\end{aligned}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks <- function(shocks, x, z, weights) {\n    \n    beta <- solve(crossprod(z, diag(weights) %*% z)) %*% crossprod(z, diag(weights) %*% x)\n    \n    result <- shocks %*% beta\n    \n    return(result)\n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nshocks <- c(-0.1, 0.1)\noverlap_z_xts <- overlap_x_xts[ , 1:2]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nimplied_shocks(shocks, overlap_x_xts, overlap_z_xts, weights)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     SP500 DTWEXAFEGS      DGS10 BAMLH0A0HYM2\n[1,]  -0.1        0.1 -0.0103585 -0.005015706\n```\n\n\n:::\n:::\n\n\n## Stress P&L\n\n\n::: {.cell}\n\n```{.r .cell-code}\npnl_stress <- function(shocks, x, y, z, weights, intercept) {\n    \n    coef <- lm_coef(x, y, weights, intercept)\n    \n    if (intercept) x <- model.matrix(~ x)\n    \n    result <- t(coef) * implied_shocks(shocks, x, z, weights)\n    \n    return(result)    \n    \n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npnl_stress(shocks, overlap_x_xts, overlap_y_xts, overlap_z_xts, weights, intercept)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        (Intercept)      xSP500 xDTWEXAFEGS      xDGS10 xBAMLH0A0HYM2\nBAICX -0.0001049635 -0.01913491  -0.0145976 -0.03346309  -0.006121339\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}