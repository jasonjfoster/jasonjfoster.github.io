---
title: "Crowds"
author: "[Jason Foster](mailto:jason.j.foster@gmail.com)"
date: last-modified
categories:
  - analysis
  - finance
  - r
draft: true
---

```{r}
factors_r <- c("SP500") # "SP500" does not contain dividends
factors_d <- c("SOFR")
```

```{r, echo = FALSE, message = FALSE}
source("../helper-levels.R")
```

# Parse web

```{r, message = FALSE}
library(xml2)
```

```{r}
get_nth <- function(x, n, offset = 0) {
  
  result <- x[seq(offset + 1, length(x), by = n)]
  
  return(result)
  
}
```

```{r}
get_mstar <- function() {
  
  i <- 0
  status <- TRUE
  names_ls <- list()
  tickers_ls <- list()
  types_ls <- list()
  
  while(status) {
    
    i <- i + 1
    
    url <- "https://www.morningstar.com/asset-allocation-funds?page="
    response <- read_html(paste0(url, i))
    
    table <- xml_find_all(response, ".//div[@class='topic__table-container']")
    
    if (length(table) == 0) {
      status <- FALSE
    } else {
      
      names_tickers <- xml_text(xml_find_all(response, ".//a[@class='mdc-link mds-link mds-link--data-table mdc-link--no-visited']"))
      types <- xml_text(xml_find_all(response, ".//span[@class='mdc-data-point mdc-data-point--string mdc-string']"))
      
      names_ls <- append(names_ls, list(get_nth(names_tickers, 2)))
      tickers_ls <- append(tickers_ls, list(get_nth(names_tickers, 2, 1)))
      types_ls <- append(types_ls, list(get_nth(types, 5, 2)))
      
    }
    
  }
  
  result <- data.frame("name" = do.call(c, names_ls),
                       "ticker" = do.call(c, tickers_ls),
                       "type" = do.call(c, types_ls))
  
  return(result)
  
}
```

# Optimization

```{r, message = FALSE}
library(CVXR)
```

```{r}
min_rss_optim <- function(x, y) {
    
    params <- Variable(ncol(x))
    
    obj <- Minimize(sum_squares(y - x %*% params))
    
    cons <- list(sum(params) == 1, params >= 0, params <= 1)
    
    prob <- Problem(obj, cons)
        
    result <- solve(prob)$getValue(params)
    
    return(result)

}
```

```{r}
mstar_df <- get_mstar()
```

```{r}
tickers <- mstar_df[mstar_df$type == "Tactical Allocation", "ticker"]
```

```{r, echo = FALSE, message = FALSE}
source("../helper-prices.R")
```

```{r}
# n_rows <- nrow(overlap_xts)
result_ls <- list()

# for (i in width:n_rows) {
for (i in width) {
    
    idx <- max(i - width + 1, 1):i
    x_subset <- overlap_x_xts[idx, ]
    y_subset <- overlap_y_xts[idx, ]
    params_ls <- list()
    
    for (j in tickers) {
        
        params <- t(min_rss_optim(coredata(x_subset), coredata(y_subset[ , j])))
        params_ls <- append(params_ls, list(params))
        
    }
    
    result <- colMeans(do.call(rbind, params_ls))
    result_ls <- append(result_ls, list(result))
    
}
```

```{r}
position <- do.call(rbind, result_ls)
# position_xts <- xts(position, index(overlap_xts)[width:n_rows])
position_xts <- xts(position, tail(index(overlap_xts), 1))
colnames(position_xts) <- factors
```

```{r}
tail(position_xts)
```
